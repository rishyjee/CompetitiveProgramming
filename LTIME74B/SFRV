All submissions for this problem are available.### Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.

You are given a sequence A1,A2,…,AN. You may perform the following operation an arbitrary number of times (including zero): choose two adjacent elements of this sequence, i.e. Ai, Ai+1 for some valid i, and swap them. However, for each valid i, it is not allowed to choose Ai (the element with the index i, regardless of its value at any point in time) more than once in total during this process.

Find the maximum of the sum S=∑Ni=1Ai⋅i.

Input
The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains a single integer N.
The second line contains N space-separated integers A1,A2,…,AN.
Output
For each test case, print a single line containing one integer ― the maximum possible value of S.

Constraints
1≤T≤1,000
1≤N≤105
1≤Ai≤109 for each valid i
the sum of N over all test cases does not exceed 106
Subtasks
Subtask #1 (50 points):

N≤20
the sum of N over all test cases does not exceed 200
Subtask #2 (50 points): original constraints

Example Input
2
4
2 1 4 3
4
7 6 3 2
Example Output
30
39
Explanation
Example case 1: Swap the first and second element of the initial sequence. Then, swap the third and fourth element of the resulting sequence. The final sequence A is (1,2,3,4).

Example case 2: Swap the second and third element to make the sequence (7,3,6,2).

****************************************************************************
# cook your dish here
for t in range(int(input())):
	n = int(input())
	a = list(map(int,input().split()))
	dp = [0 for i in range(n+1)]
	dp[1] = a[0]
	for i in range(2,n+1):
		dp[i] = max(dp[i-2] + a[i-2]*(i) + a[i-1]*(i-1), dp[i-1] + a[i-1]*(i))
	print(dp[n])
